"""empty message

Revision ID: 161b855778b7
Revises: d4fcb76a0847
Create Date: 2025-01-25 10:29:50.256385

"""

from alembic import op
import sqlalchemy as sa


# revision identifiers, used by Alembic.
revision = "161b855778b7"
down_revision = "d4fcb76a0847"
branch_labels = None
depends_on = None


def upgrade():
    # ### commands auto generated by Alembic - please adjust! ###
    op.create_table(
        "ModelSteps",
        sa.Column("id", sa.Integer(), autoincrement=True, nullable=False),
        sa.Column("type", sa.String(), nullable=False),
        sa.PrimaryKeyConstraint("id"),
    )
    op.create_table(
        "RecommendationModels",
        sa.Column("id", sa.Integer(), autoincrement=True, nullable=False),
        sa.Column("model_name", sa.String(), nullable=False),
        sa.Column("model_type", sa.String(), nullable=False),
        sa.Column("model_step", sa.Integer(), nullable=False),
        sa.Column("schema_id", sa.Integer(), nullable=False),
        sa.ForeignKeyConstraint(
            ["model_step"],
            ["ModelSteps.id"],
        ),
        sa.ForeignKeyConstraint(
            ["schema_id"],
            ["Schema.id"],
        ),
        sa.PrimaryKeyConstraint("id"),
    )
    op.create_table(
        "DocumentEditModelSettings",
        sa.Column("id", sa.Integer(), autoincrement=True, nullable=False),
        sa.Column("document_edit_id", sa.Integer(), nullable=False),
        sa.Column("model_id", sa.Integer(), nullable=False),
        sa.Column("key", sa.String(), nullable=False),
        sa.Column("value", sa.String(), nullable=False),
        sa.ForeignKeyConstraint(
            ["document_edit_id"],
            ["DocumentEdit.id"],
        ),
        sa.ForeignKeyConstraint(
            ["model_id"],
            ["RecommendationModels.id"],
        ),
        sa.PrimaryKeyConstraint("id"),
    )
    with op.batch_alter_table("DocumentEdit", schema=None) as batch_op:
        batch_op.add_column(sa.Column("mention_model_id", sa.Integer(), nullable=True))
        batch_op.add_column(sa.Column("entity_model_id", sa.Integer(), nullable=True))
        batch_op.add_column(sa.Column("relation_model_id", sa.Integer(), nullable=True))
        batch_op.create_foreign_key(
            None, "RecommendationModels", ["relation_model_id"], ["id"]
        )
        batch_op.create_foreign_key(
            None, "RecommendationModels", ["entity_model_id"], ["id"]
        )
        batch_op.create_foreign_key(
            None, "RecommendationModels", ["mention_model_id"], ["id"]
        )

    op.bulk_insert(
        sa.table(
            "ModelSteps",
            sa.column("id", sa.Integer),
            sa.column("type", sa.String),
        ),
        [
            {"id": 1, "type": "MENTIONS"},
            {"id": 2, "type": "ENTITIES"},
            {"id": 3, "type": "RELATIONS"},
        ],
    )

    # ### end Alembic commands ###


def downgrade():
    # ### commands auto generated by Alembic - please adjust! ###
    with op.batch_alter_table("DocumentEdit", schema=None) as batch_op:
        batch_op.drop_constraint(None, type_="foreignkey")
        batch_op.drop_constraint(None, type_="foreignkey")
        batch_op.drop_constraint(None, type_="foreignkey")
        batch_op.drop_column("relation_model_id")
        batch_op.drop_column("entity_model_id")
        batch_op.drop_column("mention_model_id")

    op.drop_table("DocumentEditModelSettings")
    op.drop_table("RecommendationModels")
    op.drop_table("ModelSteps")
    # ### end Alembic commands ###
