"""empty message

Revision ID: 3e804134d032
Revises: 332c645c6a01
Create Date: 2024-11-20 20:38:56.511181

"""

from alembic import op
import sqlalchemy as sa


# revision identifiers, used by Alembic.
revision = "3e804134d032"
down_revision = "332c645c6a01"
branch_labels = None
depends_on = None


def upgrade():
    # ### commands auto generated by Alembic - please adjust! ###
    op.create_table(
        "DocumentEditState",
        sa.Column("id", sa.Integer(), autoincrement=True, nullable=False),
        sa.Column("state", sa.String(), nullable=False),
        sa.PrimaryKeyConstraint("id"),
        sa.UniqueConstraint("state"),
    )
    op.create_table(
        "DocumentState",
        sa.Column("id", sa.Integer(), autoincrement=True, nullable=False),
        sa.Column("state", sa.String(), nullable=False),
        sa.PrimaryKeyConstraint("id"),
        sa.UniqueConstraint("state"),
    )
    op.create_table(
        "Entity",
        sa.Column("id", sa.Integer(), autoincrement=True, nullable=False),
        sa.Column("isShownRecommendation", sa.Boolean(), nullable=False),
        sa.PrimaryKeyConstraint("id"),
    )
    op.create_table(
        "ModellingLanguage",
        sa.Column("id", sa.Integer(), autoincrement=True, nullable=False),
        sa.Column("name", sa.String(), nullable=False),
        sa.PrimaryKeyConstraint("id"),
        sa.UniqueConstraint("name"),
    )
    op.create_table(
        "Team",
        sa.Column("id", sa.Integer(), autoincrement=True, nullable=False),
        sa.Column("name", sa.String(), nullable=False),
        sa.PrimaryKeyConstraint("id"),
        sa.UniqueConstraint("name"),
    )
    op.create_table(
        "User",
        sa.Column("id", sa.Integer(), autoincrement=True, nullable=False),
        sa.Column("username", sa.String(), nullable=False),
        sa.Column("password", sa.String(), nullable=False),
        sa.PrimaryKeyConstraint("id"),
        sa.UniqueConstraint("username"),
    )
    op.create_table(
        "Schema",
        sa.Column("id", sa.Integer(), autoincrement=True, nullable=False),
        sa.Column("isFixed", sa.Boolean(), nullable=False),
        sa.Column("modellingLanguage", sa.Integer(), nullable=False),
        sa.ForeignKeyConstraint(
            ["modellingLanguage"],
            ["ModellingLanguage.id"],
        ),
        sa.PrimaryKeyConstraint("id"),
    )
    op.create_table(
        "UserTeam",
        sa.Column("id", sa.Integer(), autoincrement=True, nullable=False),
        sa.Column("user_id", sa.Integer(), nullable=False),
        sa.Column("team_id", sa.Integer(), nullable=False),
        sa.ForeignKeyConstraint(
            ["team_id"],
            ["Team.id"],
        ),
        sa.ForeignKeyConstraint(
            ["user_id"],
            ["User.id"],
        ),
        sa.PrimaryKeyConstraint("id"),
    )
    op.create_table(
        "Project",
        sa.Column("id", sa.Integer(), autoincrement=True, nullable=False),
        sa.Column("name", sa.String(), nullable=False),
        sa.Column("creator_id", sa.Integer(), nullable=False),
        sa.Column("team_id", sa.Integer(), nullable=False),
        sa.Column("schema_id", sa.Integer(), nullable=False),
        sa.ForeignKeyConstraint(
            ["creator_id"],
            ["User.id"],
        ),
        sa.ForeignKeyConstraint(
            ["schema_id"],
            ["Schema.id"],
        ),
        sa.ForeignKeyConstraint(
            ["team_id"],
            ["Team.id"],
        ),
        sa.PrimaryKeyConstraint("id"),
        sa.UniqueConstraint("name"),
    )
    op.create_table(
        "SchemaMention",
        sa.Column("id", sa.Integer(), autoincrement=True, nullable=False),
        sa.Column("schema_id", sa.Integer(), nullable=False),
        sa.Column("tag", sa.String(), nullable=False),
        sa.ForeignKeyConstraint(
            ["schema_id"],
            ["Schema.id"],
        ),
        sa.PrimaryKeyConstraint("id"),
    )
    op.create_table(
        "SchemaRelation",
        sa.Column("id", sa.Integer(), autoincrement=True, nullable=False),
        sa.Column("schema_id", sa.Integer(), nullable=False),
        sa.Column("tag", sa.String(), nullable=False),
        sa.ForeignKeyConstraint(
            ["schema_id"],
            ["Schema.id"],
        ),
        sa.PrimaryKeyConstraint("id"),
    )
    op.create_table(
        "Document",
        sa.Column("id", sa.Integer(), autoincrement=True, nullable=False),
        sa.Column("content", sa.String(), nullable=False),
        sa.Column("creator_id", sa.Integer(), nullable=False),
        sa.Column("state", sa.Integer(), nullable=False),
        sa.Column("project_id", sa.Integer(), nullable=False),
        sa.ForeignKeyConstraint(
            ["creator_id"],
            ["User.id"],
        ),
        sa.ForeignKeyConstraint(
            ["project_id"],
            ["Project.id"],
        ),
        sa.ForeignKeyConstraint(
            ["state"],
            ["DocumentState.id"],
        ),
        sa.PrimaryKeyConstraint("id"),
    )
    op.create_table(
        "SchemaConstraint",
        sa.Column("id", sa.Integer(), autoincrement=True, nullable=False),
        sa.Column("schema_relation_id", sa.Integer(), nullable=False),
        sa.Column("schema_mention_id_head", sa.Integer(), nullable=False),
        sa.Column("schema_mention_id_tail", sa.Integer(), nullable=False),
        sa.Column("isDirected", sa.Boolean(), nullable=False),
        sa.ForeignKeyConstraint(
            ["schema_relation_id"],
            ["SchemaRelation.id"],
        ),
        sa.PrimaryKeyConstraint("id"),
    )
    op.create_table(
        "DocumentEdit",
        sa.Column("id", sa.Integer(), autoincrement=True, nullable=False),
        sa.Column("state", sa.Integer(), nullable=False),
        sa.Column("document_id", sa.Integer(), nullable=False),
        sa.ForeignKeyConstraint(
            ["document_id"],
            ["Document.id"],
        ),
        sa.ForeignKeyConstraint(
            ["state"],
            ["DocumentEditState.id"],
        ),
        sa.PrimaryKeyConstraint("id"),
    )
    op.create_table(
        "Token",
        sa.Column("id", sa.Integer(), autoincrement=True, nullable=False),
        sa.Column("text", sa.String(), nullable=False),
        sa.Column("document_index", sa.Integer(), nullable=False),
        sa.Column("sentence_index", sa.Integer(), nullable=False),
        sa.Column("pos_tag", sa.String(), nullable=True),
        sa.Column("bio_tag", sa.String(), nullable=True),
        sa.Column("document_id", sa.Integer(), nullable=False),
        sa.ForeignKeyConstraint(
            ["document_id"],
            ["Document.id"],
        ),
        sa.PrimaryKeyConstraint("id"),
    )
    op.create_table(
        "DocumentRecommendation",
        sa.Column("id", sa.Integer(), autoincrement=True, nullable=False),
        sa.Column("documentEditHash", sa.String(), nullable=False),
        sa.Column("document_id", sa.Integer(), nullable=True),
        sa.Column("document_edit_id", sa.Integer(), nullable=True),
        sa.ForeignKeyConstraint(
            ["document_edit_id"],
            ["DocumentEdit.id"],
        ),
        sa.ForeignKeyConstraint(
            ["document_id"],
            ["Document.id"],
        ),
        sa.PrimaryKeyConstraint("id"),
    )
    op.create_table(
        "Mention",
        sa.Column("id", sa.Integer(), autoincrement=True, nullable=False),
        sa.Column("tag", sa.String(), nullable=False),
        sa.Column("isShownRecommendation", sa.Boolean(), nullable=False),
        sa.Column("document_edit_id", sa.Integer(), nullable=True),
        sa.Column("document_recommendation_id", sa.Integer(), nullable=True),
        sa.Column("entity_id", sa.Integer(), nullable=True),
        sa.ForeignKeyConstraint(
            ["document_edit_id"],
            ["DocumentEdit.id"],
        ),
        sa.ForeignKeyConstraint(
            ["document_recommendation_id"],
            ["DocumentRecommendation.id"],
        ),
        sa.ForeignKeyConstraint(
            ["entity_id"],
            ["Entity.id"],
        ),
        sa.PrimaryKeyConstraint("id"),
    )
    op.create_table(
        "Relation",
        sa.Column("id", sa.Integer(), autoincrement=True, nullable=False),
        sa.Column("isShownRecommendation", sa.Boolean(), nullable=False),
        sa.Column("tag", sa.String(), nullable=False),
        sa.Column("isDirected", sa.Boolean(), nullable=False),
        sa.Column("mention_head_id", sa.Integer(), nullable=False),
        sa.Column("mention_tail_id", sa.Integer(), nullable=False),
        sa.ForeignKeyConstraint(
            ["mention_head_id"],
            ["Mention.id"],
        ),
        sa.ForeignKeyConstraint(
            ["mention_tail_id"],
            ["Mention.id"],
        ),
        sa.PrimaryKeyConstraint("id"),
    )
    op.create_table(
        "TokenMention",
        sa.Column("id", sa.Integer(), autoincrement=True, nullable=False),
        sa.Column("token_id", sa.Integer(), nullable=False),
        sa.Column("mention_id", sa.Integer(), nullable=False),
        sa.ForeignKeyConstraint(
            ["mention_id"],
            ["Mention.id"],
        ),
        sa.ForeignKeyConstraint(
            ["token_id"],
            ["Token.id"],
        ),
        sa.PrimaryKeyConstraint("id"),
    )
    op.drop_table("user")
    # ### end Alembic commands ###


def downgrade():
    # ### commands auto generated by Alembic - please adjust! ###
    op.create_table(
        "user",
        sa.Column("id", sa.INTEGER(), autoincrement=True, nullable=False),
        sa.Column("username", sa.VARCHAR(), autoincrement=False, nullable=False),
        sa.Column("password", sa.VARCHAR(), autoincrement=False, nullable=False),
        sa.PrimaryKeyConstraint("id", name="user_pkey"),
        sa.UniqueConstraint("username", name="user_username_key"),
    )
    op.drop_table("TokenMention")
    op.drop_table("Relation")
    op.drop_table("Mention")
    op.drop_table("DocumentRecommendation")
    op.drop_table("Token")
    op.drop_table("DocumentEdit")
    op.drop_table("SchemaConstraint")
    op.drop_table("Document")
    op.drop_table("SchemaRelation")
    op.drop_table("SchemaMention")
    op.drop_table("Project")
    op.drop_table("UserTeam")
    op.drop_table("Schema")
    op.drop_table("User")
    op.drop_table("Team")
    op.drop_table("ModellingLanguage")
    op.drop_table("Entity")
    op.drop_table("DocumentState")
    op.drop_table("DocumentEditState")
    # ### end Alembic commands ###
